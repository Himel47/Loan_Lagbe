


@using LoanData.ViewModels;

@model PersonalLoanFormViewModel



<style>

    .loan-details-form {
        max-height: 300px;
        width: 100%;
        overflow: scroll;
        overscroll-behavior: contain;
        scrollbar-color: unset;
        scrollbar-width: thin;
        scrollbar-color: #888888 #ffffff;
    }

    .loan-details-form::-webkit-scrollbar {
        width: 5px;
    }

    .loan-details-form::-webkit-scrollbar-track {
        background-color: #ffffff;
    }

    .loan-details-form::-webkit-scrollbar-thumb {
        background-color: #888888;
    }

    .input-size {
        width: 70px;
        text-align: center;
        justify-content: center;
        align-items: center;
    }

    .readonly-input {
        background-color: lightgrey !important;
        border: none;
    }

    .installmentSelect {
        font-size: 19px;
    }

    thead tr td {
        font-size: 14px;
    }
</style>



Hello there!
<div class="d-flex justify-content-between align-items-center mx-2">
    <h2>Member: <u>@Model.SelectedMemberName</u><br />Group: <u>@Model.SelectedGroupName</u></h2>
    <a class="btn btn-outline-secondary btn-sm"
        asp-action="GroupMemberList"
        asp-controller="Group"
        asp-route-groupId="@Model.SelectedGroupId"
        asp-route-groupTypeId="1">
        Back to Group Member Page
    </a>
</div>
<hr />
<hr />

<div class="container py-2 loan-details-form">
    <table class="table" id="table-id">
        <thead class="table-primary text-center">
            <tr>
                <th>GroupId</th>
                <th>Loan Amount</th>
                <th>Refund Period (in Month)</th>
                <th>Installment Period (in Days)</th>
                <th>Total Installment</th>
                <th>Interest Rate</th>
                <th>Processing Fee</th>
                <th>Other charge</th>
                <th>Total Interest</th>
                <th>Total charge</th>
                <th>Total Amount</th>
                <th>Amount per Installment</th>
            </tr>
        </thead>
        <tbody class="py-2 text-center">
            <input asp-for="SelectedMemberNID" value="@Model.SelectedMemberNID" hidden>
            <tr>
                <input asp-for="LoanBasic.MemberNID" value="@Model.SelectedMemberNID" hidden>
                <input asp-for="LoanBasic.GroupId" value="@Model.SelectedGroupId" hidden>
                <td>
                    @Model.SelectedGroupId
                </td>
                <td class="amount">
                    <input asp-for="LoanBasic.LoanAmount" type="number" class="input-size" min="1" value="10000" />
                </td>
                <td class="submission-time">
                    <input asp-for="LoanBasic.SubmissionTimeInMonth" type="number" class="input-size" min="1" value="6" />
                </td>
                <td class="installment-days">
                    <select class="input-size installmentSelect" asp-items="Model.SubmissionPeriod" asp-for="LoanBasic.InstallmentDays"></select>
                </td>
                <td class="installmentCount">
                    <input asp-for="LoanBasic.InstallmentCount" type="number" class="input-size readonly-input" min="1" value="25" readonly />
                </td>
                <td class="interest-rate">
                    <input asp-for="LoanBasic.InterestRate" type="number" class="input-size" min="1" value="8" />
                </td>
                <td class="processingFee">
                    <input asp-for="LoanBasic.ProcessingFee" type="number" class="input-size readonly-input" min="0" value="120" readonly />
                </td>
                <td class="extraCharge">
                    <input asp-for="LoanBasic.ExtraCharge" type="number" class="input-size" min="0" value="0" />
                </td>
                <td class="totalInterest">
                    <input asp-for="LoanBasic.IncludedInterest" id="totalInterest" class="input-size readonly-input" value="800" readonly />
                </td>
                <td class="totalCharge">
                    <input asp-for="LoanBasic.TotalCharge" type="number" class="input-size readonly-input" min="0" value="120" readonly />
                </td>
                <td class="totalRefundAmount">
                    <input asp-for="LoanBasic.RefundAmount" type="number" class="input-size readonly-input" value="10920" readonly />
                </td>
                <td class="perInstallmentAmount">
                    <input asp-for="LoanBasic.PerInstallmentAmount" type="number" class="input-size readonly-input" value="437" readonly />
                </td>
            </tr>
        </tbody>
    </table>
    <div class="d-flex justify-content-between my-3 px-4 py-1">
        <button class="btn btn-primary btn-sm button-submit" id="loan-form-button">Submit Plan</button>
        <span></span>
    </div>
</div>




@section scripts {
    <script>
        $(".loan-details-form").on("keyup keypress", function (e) {
            var keyCode = e.keyCode || e.which;
            if (keyCode === 13) {
                e.preventDefault();
                return false;
            }
        });

        $(document).ready(function () {

            var groupId = @Model.SelectedGroupId,
                memberId = @Model.SelectedMemberNID;

            var amount, interestRate, period, installmentInDays, totalCharge, processingFee, extraCharge;
            var totalDays, totalInstallment, totalInterest, totalFees, totalAmount, perInstallmentAmount;

            const primaryHelper = () => {
                amount = $(`#LoanBasic_LoanAmount`).val();
                interestRate = $(`#LoanBasic_InterestRate`).val();
                period = $(`#LoanBasic_SubmissionTimeInMonth`).val();
                installmentInDays = Number.parseInt($(`#LoanBasic_InstallmentDays`).val());
                totalCharge = $(`#LoanBasic_TotalCharge`).val();
                processingFee = Number.parseInt($(`#LoanBasic_ProcessingFee`).val());
                extraCharge = Number.parseInt($(`#LoanBasic_ExtraCharge`).val());

                totalDays = 30 * Number.parseInt(period);
                totalInstallment = Math.floor(totalDays / installmentInDays);
                totalInterest = amount * Number.parseFloat(interestRate) / 100;
                totalFees = processingFee + extraCharge;
                totalAmount = Math.ceil(Number.parseInt(amount) + totalInterest + Number.parseInt(totalFees));
                perInstallmentAmount = Math.ceil(totalAmount / totalInstallment);

                console.log(totalAmount, perInstallmentAmount);

                $(`#LoanBasic_PerInstallmentAmount`).val(perInstallmentAmount);
                $(`#LoanBasic_InstallmentCount`).val(totalInstallment);
                $(`#LoanBasic_RefundAmount`).val(totalAmount);
                $(`#LoanBasic_TotalCharge`).val(totalFees);
                $(`#totalInterest`).val(totalInterest);
            }

            $(".amount").on("change keypress", () => {
                primaryHelper();
            });

            $(".submission-time").on("change keypress", () => {
                primaryHelper();
            });

            $(".installment-days").on("change keypress", () => {
                primaryHelper();
            });

            $(".interest-rate").on("change keypress", () => {
                primaryHelper();
            });

            $(".extraCharge").on("change keypress", () => {
                primaryHelper();
            });

            $("#loan-form-button").on("click", function () {
                primaryHelper()

                console.log("Button Clicked " + groupId + " " + memberId + " " + amount + " "
                    + interestRate + " " + period + " " + installmentInDays + " " + totalCharge + " "
                    + processingFee + " " + extraCharge + " " + totalDays + " " + totalInstallment + " "
                    + totalInterest + " " + totalFees + " " + totalAmount + " "+ perInstallmentAmount +"\n")

                $.ajax({
                    type: "POST",
                    url: "/Api/Loans",
                    data: {
                        GroupId: groupId,
                        MemberId: memberId,
                        LoanAmount: amount,
                        InterestRate: interestRate,
                        SubmissionTimeInMonth: period,
                        InstallmentDays: installmentInDays,
                        InstallmentCount: totalInstallment,
                        PerInstallmentAmount: perInstallmentAmount,
                        IncludedInterest: totalInterest,
                        ProcessingFee: processingFee,
                        ExtraCharge: extraCharge,
                        TotalCharge: totalCharge,
                        RefundAmount: totalAmount
                    },
                    datatype: "json",
                    success: function (response) {
                        //console.log(response);
                        bootbox.alert(response.value,
                            ()=>window.location.href = "/Loan/LoanIndex"
                        )
                    },
                    error: function (error) {
                        console.log(error);
                    }
                });
            });


            //$(".button-submit").on("click", (event)=>{
            
            //    //var formId = "#form-" + serial;
            //    //var form = document.querySelector(formId)

            //    var formId = $(this).data("form-id");
            //    var form = $("#" + formId);

            //    console.log(form)
            //    debugger

            //    var formData = {};


            //    form.find('input[data-column-name]').each(function () {
            //        var columnName = $(this).data('column-name');
            //        var columnValue = $(this).val();
            //        formData[columnName] = columnValue;
            //        debugger
            //    });





                //var inputs = form.querySelectorAll("input");
                ////console.log(inputs)
                ////debugger;
                //inputs.forEach(function (input) {
                //    //debugger;
                //    if (!input.name.includes("VerificationToken")) {
                //        var fieldName = input.name.replace(/LoanBasic\[\d+\]\./, "");
                //        formData[fieldName] = input.value;
                //    }
                //});

                //var selects = form.querySelectorAll("select")

                //selects.forEach(function (select) {
                //    var fieldName = select.name.replace(/LoanBasic\[\d+\]\./, "");
                //    formData[fieldName] = select.value;
                //})

            //    console.log(formData)

            //    $.ajax({
            //        type: "POST",
            //        url: "/Api/Loans",
            //        data: JSON.stringify(formData),
            //        datatype: "json",
            //        success: function (response) {
            //            debugger;
            //            console.log(response);
            //        },
            //        error: function (error) {
            //            debugger;
            //            console.log(error);
            //        }
            //    });


            //})


            //function submitForm(groupId) {
            //    var formId = "#form-" + groupId;
            //    var form = document.querySelector(formId)

            //    console.log(formId)

            //    var formData = {};

            //    var inputs = form.querySelectorAll("input");
            //    //console.log(inputs)
            //    //debugger;
            //    inputs.forEach(function (input) {
            //        //debugger;
            //        if(!input.name.includes("VerificationToken")){
            //            var fieldName = input.name.replace(/LoanBasic\[\d+\]\./, "");
            //            formData[fieldName] = input.value;
            //        }
            //    });

            //    var selects = form.querySelectorAll("select")

            //    selects.forEach(function (select) {
            //        var fieldName = select.name.replace(/LoanBasic\[\d+\]\./, "");
            //        formData[fieldName] = select.value;
            //    })

            //    console.log(JSON.stringify(formData))


            //    //fetch("/api/Loans/", {
            //    //    method: "post",
            //    //    headers: {
            //    //        "Content-Type": "application/json",
            //    //        //'Content-Type': 'application/x-www-form-urlencoded',
            //    //    },

            //    //    body: formData
            //    //}).then((res)=>{
            //    //    console.log(res)
            //    //}).catch((error)=>{
            //    //    console.log(error)
            //    //})

            //    $.ajax({
            //        type: "POST",
            //        url: "/Api/Loans",
            //        data: JSON.stringify(formData),
            //        datatype: "json",
            //        success: function (response) {
            //            debugger;
            //            console.log(response);
            //        },
            //        error: function (error) {
            //            debugger;
            //            console.log(error);
            //        }
            //    });

            //}

        });
    </script>
}
